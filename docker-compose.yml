services:
  # PostgreSQL database
  db:
    image: postgres:18-alpine
    container_name: wedding_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-wedding_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wedding_network

  # Django backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: wedding_backend
    command: >
      sh -c "uv run manage.py migrate &&
             uv run manage.py makemigrations &&
             uv run manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - media_volume:/app/media
      - /app/.venv
    ports:
      - "8000:8000"
    environment:
      DEBUG: "True"
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      DATABASE_ENGINE: django.db.backends.postgresql
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      ALLOWED_HOSTS: localhost,127.0.0.1,backend
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wedding_network
    stdin_open: true
    tty: true

  # React frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: wedding_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - wedding_network
    stdin_open: true
    tty: true

networks:
  wedding_network:
    driver: bridge

volumes:
  postgres_data:
    name: wedding_postgres_data
  media_volume:
    name: wedding_media
